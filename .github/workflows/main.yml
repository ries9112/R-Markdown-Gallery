name: Run R Markdown Examples
on: [push]

jobs:
  build:
    runs-on: macOS-10.15
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      PIP_NO_WARN_SCRIPT_LOCATION: false
      RETICULATE_AUTOCONFIGURE: 'FALSE'
      CRAN: ${{ matrix.config.cran }}
      bookdown-directory: documents/bookdown
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: '4.0.3'
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-3-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-3-
      - name: Prepare environment and run all examples
        run: |
          #install.packages('rmarkdown')
          #install.packages('pacman')
          install.packages('renv')
          renv::consent(provided = TRUE)
          renv::restore()
          source('script.R')
          remotes::install_github('rstudio/reticulate')
          library(reticulate)
          try(reticulate::install_miniconda())
          reticulate::conda_create('r-reticulate', packages = c('python==3.6.9'))
          reticulate::conda_install('r-reticulate','pandas')
          # beamer prerequisites
          #install.packages("tinytex")
          tinytex::install_tinytex()
          # presentations - beamer
          rmarkdown::render('presentations/beamer.Rmd')
          # presentations - ioslides
          rmarkdown::render('presentations/ioslides.Rmd')
          # presentations - powerpoint
          rmarkdown::render('presentations/powerpoint.Rmd')
          # presentations - revealjs
          rmarkdown::render('presentations/revealjs.Rmd')
          # presentations - slidy
          rmarkdown::render('presentations/slidy.Rmd')
          # presentations - xaringan
          rmarkdown::render('presentations/xaringan.Rmd')
          
          # documents - html
          rmarkdown::render('documents/html_document.Rmd')
          # documents - pdf
          rmarkdown::render('documents/pdf_document.Rmd')
          # documents - tufte handout
          rmarkdown::render('documents/tufte_handout.Rmd')
          # documents - word
          rmarkdown::render('documents/word_document.Rmd')
          
          # documents - parallax
          source('documents/parallax/build_parallax.R')
          
          # Also remember that somewhere need to create docs folder for gh pages 
          
        shell: Rscript {0}
      - name: run bookdown example
        run: |
          source('script.R')
          bookdown::render_book('index.Rmd')
        shell: Rscript {0}
        working-directory: ${{env.bookdown-directory}}
      - name: Commit and push files
        run: |
          git config --local user.email "ries9112@colorado.edu"
          git config --local user.name "ries9112"
          git add .
          git commit -m "Refresh R Markdown examples from CI automated process" -a
          git push https://ries9112:${{secrets.GITHUB_TOKEN}}@github.com/ries9112/R-Markdown-Gallery.git HEAD:main --force

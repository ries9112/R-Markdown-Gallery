<<<<<<< HEAD
[["index.html", "R Markdown Output Chapter 1 Overview", " R Markdown Output Last run on: 2020-12-16 09:47:24 2020-12-16 09:47:24 Chapter 1 Overview This document has code embedded throughout. In the next section we will create a visualization using the already loaded dataset eth_data: datatable(eth_data) The table above uses the DT package (Xie, Cheng, and Tan 2020). The bookdown package (Xie 2016) is packed with functionality, including in-text citations that automatically generate the references correctly as we have done here. "],["price-chart-ethereum.html", "Chapter 2 Price Chart - Ethereum", " Chapter 2 Price Chart - Ethereum "],["python-code-example.html", "Chapter 3 Python Code Example 3.1 One more Python example", " Chapter 3 Python Code Example import pandas as pd # Create the Python object from R df = r.cryptodata # Show the new Python dataframe df ## pair symbol ask_1_price date_time_utc ## 0 ETHUSD ETH 620.942 2020-12-16 16:00:01 ## 1 BTCUSD BTC 20658.910 2020-12-16 16:00:00 ## 2 BTCUSD BTC 20660.760 2020-12-16 15:00:01 ## 3 ETHUSD ETH 619.786 2020-12-16 15:00:01 ## 4 BTCUSD BTC 20327.440 2020-12-16 14:00:01 ## ... ... ... ... ... ## 5285 BTCUSD BTC 11972.900 2020-08-10 06:03:50 ## 5286 BTCUSD BTC 11985.890 2020-08-10 05:03:48 ## 5287 BTCUSD BTC 11997.470 2020-08-10 04:32:55 ## 5288 BTCUSD BTC 10686.880 NaT ## 5289 ETHUSD ETH 357.844 NaT ## ## [5290 rows x 4 columns] 3.1 One more Python example The code below creates a new column price_percentile that specifies if the price for the row was in the upper or lower 50th percentile of prices (BTC should be upper and ETH lower): import numpy as np # Create a new column based on the ask_1_price value: df[&#39;price_percentile&#39;] = np.where(df[&#39;ask_1_price&#39;] &gt; np.percentile(df[&#39;ask_1_price&#39;], 50), &#39;upper 50th percentile of prices&#39;, &#39;lower 50th percentile of prices&#39;) # Show modified dataframe: df[[&#39;symbol&#39;, &#39;ask_1_price&#39;, &#39;price_percentile&#39;]] ## symbol ask_1_price price_percentile ## 0 ETH 620.942 lower 50th percentile of prices ## 1 BTC 20658.910 upper 50th percentile of prices ## 2 BTC 20660.760 upper 50th percentile of prices ## 3 ETH 619.786 lower 50th percentile of prices ## 4 BTC 20327.440 upper 50th percentile of prices ## ... ... ... ... ## 5285 BTC 11972.900 upper 50th percentile of prices ## 5286 BTC 11985.890 upper 50th percentile of prices ## 5287 BTC 11997.470 upper 50th percentile of prices ## 5288 BTC 10686.880 upper 50th percentile of prices ## 5289 ETH 357.844 lower 50th percentile of prices ## ## [5290 rows x 3 columns] "],["bookdown-examples.html", "Chapter 4 bookdown Examples", " Chapter 4 bookdown Examples See this example for a more complex bookdown document which updates automatically every 12 hours using the same tools as this example. Supervised Machine Learning for Text Analysis in R JavaScript for R Find more examples published through the bookdown website: https://bookdown.org/home/archive/ "],["references.html", "References", " References Xie, Yihui. 2016. Bookdown: Authoring Books and Technical Documents with R Markdown. Boca Raton, Florida: Chapman; Hall/CRC. https://github.com/rstudio/bookdown. Xie, Yihui, Joe Cheng, and Xianying Tan. 2020. DT: A Wrapper of the JavaScript Library ’DataTables’. https://CRAN.R-project.org/package=DT. "]]
=======
[["index.html", "R Markdown Output Chapter 1 Overview", " R Markdown Output Last run on: 2020-12-16 06:16:48 2020-12-16 06:16:48 Chapter 1 Overview This document has code embedded throughout. In the next section we will create a visualization using the already loaded dataset eth_data: datatable(eth_data) "],["price-chart-ethereum.html", "Chapter 2 Price Chart - Ethereum", " Chapter 2 Price Chart - Ethereum "],["literature.html", "Chapter 3 Literature", " Chapter 3 Literature Here is a review of existing methods. "],["python-code-example.html", "Chapter 4 Python Code Example 4.1 One more Python example", " Chapter 4 Python Code Example import pandas as pd # Create the Python object from R df = r.cryptodata # Show the new Python dataframe df ## pair symbol ask_1_price date_time_utc ## 0 ETHUSD ETH 583.507 2020-12-16 06:00:02 ## 1 BTCUSD BTC 19367.630 2020-12-16 06:00:00 ## 2 BTCUSD BTC 19351.160 2020-12-16 05:00:01 ## 3 ETHUSD ETH 583.321 2020-12-16 05:00:01 ## 4 ETHUSD ETH 583.142 2020-12-16 04:00:01 ## ... ... ... ... ... ## 5265 BTCUSD BTC 11972.900 2020-08-10 06:03:50 ## 5266 BTCUSD BTC 11985.890 2020-08-10 05:03:48 ## 5267 BTCUSD BTC 11997.470 2020-08-10 04:32:55 ## 5268 BTCUSD BTC 10686.880 NaT ## 5269 ETHUSD ETH 357.844 NaT ## ## [5270 rows x 4 columns] 4.1 One more Python example The code below creates a new column price_percentile that specifies if the price for the row was in the upper or lower 50th percentile of prices (BTC should be upper and ETH lower): import numpy as np # Create a new column based on the ask_1_price value: df[&#39;price_percentile&#39;] = np.where(df[&#39;ask_1_price&#39;] &gt; np.percentile(df[&#39;ask_1_price&#39;], 50), &#39;upper 50th percentile of prices&#39;, &#39;lower 50th percentile of prices&#39;) # Show modified dataframe: df[[&#39;symbol&#39;, &#39;ask_1_price&#39;, &#39;price_percentile&#39;]] ## symbol ask_1_price price_percentile ## 0 ETH 583.507 lower 50th percentile of prices ## 1 BTC 19367.630 upper 50th percentile of prices ## 2 BTC 19351.160 upper 50th percentile of prices ## 3 ETH 583.321 lower 50th percentile of prices ## 4 ETH 583.142 lower 50th percentile of prices ## ... ... ... ... ## 5265 BTC 11972.900 upper 50th percentile of prices ## 5266 BTC 11985.890 upper 50th percentile of prices ## 5267 BTC 11997.470 upper 50th percentile of prices ## 5268 BTC 10686.880 upper 50th percentile of prices ## 5269 ETH 357.844 lower 50th percentile of prices ## ## [5270 rows x 3 columns] "],["bookdown-examples.html", "Chapter 5 bookdown Examples", " Chapter 5 bookdown Examples See this example for a more complex bookdown document which updates automatically every 12 hours using the same tools as this example. TODO - Add more bookdown examples here "],["references.html", "References", " References "]]
>>>>>>> 4aceec2c976935f23dbaced69af3380592f55c3d
